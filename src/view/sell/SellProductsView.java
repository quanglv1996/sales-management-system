/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package project1.view.sell;

import project1.view.login.LoginView;
import project1.core.other.SetDataToObject;
import project1.core.connection.CreateConnectionDB;
import project1.core.other.TimeSystem;
import project1.core.product.ActionLog;
import project1.core.product.Book;
import project1.core.product.Movie;
import project1.core.product.Music;
import project1.core.product.ProductSell;
import project1.core.employee.EmployeeSell;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author lequangbkhn
 */
public class SellProductsView extends javax.swing.JFrame {

    /**
     * Creates new form SellProductsView
     */
    public SellProductsView() {

    }

    public void init() {
        initComponents();
        setResizable(false);
        setVisible(true);
    }
//Lay thong tin nhan vien tu frame truoc----------------------------------------
    private String username;
    private String Name;
    private int typeUser;

    public int getTypeUser() {
        return typeUser;
    }

    public void setTypeUser(int typeUser) {
        this.typeUser = typeUser;
    }

    public String getUsername() {
        return username;
    }

    public void setUsername(String username) {
        this.username = username;
    }

    @Override
    public String getName() {
        return Name;
    }

    @Override
    public void setName(String Name) {
        this.Name = Name;
    }

//Getter------------------------------------------------------------------------
    public String getMaSanPhamTF() {
        return maSanPhamTF.getText();
    }

    public String getSoLuongTF() {
        return soLuongTF.getText();
    }

    public boolean checkNumber(String s) {
        try {
            Integer.valueOf(s);
            return true;
        } catch (NumberFormatException e) {
            e.getStackTrace();
            return false;
        }
    }

    public String[] dataRow(ProductSell pro) {
        String[] rows = {pro.getMaSanPham(),
            pro.getTenSanPham(),
            String.valueOf(pro.getGiaBan()),
            String.valueOf(pro.getSoLuongBan()),
            String.valueOf(empSell.thanhTien(pro))};
        return rows;
    }

//Notify------------------------------------------------------------------------
    public void notifyWrongInput() {
        JOptionPane.showMessageDialog(this, "Mã sản phẩm hoặc số lượng nhập sai !");
    }

    public void notifyMax(int i) {
        JOptionPane.showMessageDialog(this, "Không đủ sản phẩm ! Số lượng sản phẩm <" + (i + 1) + ".");
    }

    public void notifyChoseRow() {
        JOptionPane.showMessageDialog(this, "Hãy chọn 1 hàng trong bảng !");
    }

    public void notifyPrintBill() {
        JOptionPane.showMessageDialog(this, "Không có sản phẩm nào trong giỏ !");
    }

    public void notifyThemThanhCong() {
        JOptionPane.showMessageDialog(this, "Thêm thành công !");
    }

    public void notifySuaThanhCong() {
        JOptionPane.showMessageDialog(this, "Sửa thành công !");
    }

    public void notifyXoaThanhCong() {
        JOptionPane.showMessageDialog(this, "Xóa thành công !");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        maSanPhamTF = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        soLuongTF = new javax.swing.JTextField();
        themBt = new javax.swing.JButton();
        xoaBt = new javax.swing.JButton();
        inHDBt = new javax.swing.JButton();
        logoutBt = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã SP", "Tên SP", "SL", "Giá", "Thành tiền"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        })

        ;
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        timeL = new javax.swing.JLabel();
        tongTienTF = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/project1/image/shopping_cart_1.png"))); // NOI18N
        jLabel1.setText("BÁN HÀNG");

        jLabel2.setText("Mã sản phẩm");

        jLabel3.setText("Số lượng");

        themBt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/project1/image/add16.png"))); // NOI18N
        themBt.setText("Thêm");
        themBt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                themBtActionPerformed(evt);
            }
        });

        xoaBt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/project1/image/remove16.png"))); // NOI18N
        xoaBt.setText("Xóa");
        xoaBt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xoaBtActionPerformed(evt);
            }
        });

        inHDBt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/project1/image/printer16.png"))); // NOI18N
        inHDBt.setText("In HĐ");
        inHDBt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inHDBtActionPerformed(evt);
            }
        });

        logoutBt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/project1/image/back_1.png"))); // NOI18N
        logoutBt.setText("Logout");
        logoutBt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutBtActionPerformed(evt);
            }
        });

        jTable1.setAutoCreateRowSorter(true);
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jLabel4.setText("Tổng tiền");

        jLabel5.setText("Thời gian :");

        timeL.setText(String.valueOf(new Date()));

        tongTienTF.setText("0.0");

        jLabel6.setText("Nhân viên bán hàng :");

        jLabel7.setText(getName()
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(timeL, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 200, Short.MAX_VALUE)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tongTienTF, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(242, 242, 242)
                        .addComponent(logoutBt, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(soLuongTF, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(themBt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(xoaBt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(inHDBt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 668, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(maSanPhamTF, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(logoutBt))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(maSanPhamTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(soLuongTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(themBt, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(65, 65, 65)
                                .addComponent(xoaBt, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(inHDBt, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(66, 66, 66)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)
                            .addComponent(timeL)
                            .addComponent(tongTienTF)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7))))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void themBtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_themBtActionPerformed

        // TODO add your handling code here:
        Book book = new Book();
        Music music = new Music();
        Movie movie = new Movie();
        //
        ResultSet rs1 = con.select("select * from book where MaSanPham='" + getMaSanPhamTF() + "' limit 1;");
        ResultSet rs2 = con.select("select * from movie where MaSanPham='" + getMaSanPhamTF() + "' limit 1;");
        ResultSet rs3 = con.select("select * from music where MaSanPham='" + getMaSanPhamTF() + "' limit 1;");
        //
        book = new SetDataToObject().setBook(rs1, book);
        movie = new SetDataToObject().setMovie(rs2, movie);
        music = new SetDataToObject().setMusic(rs3, music);
        //
        if (book.getMaSanPham() != null && checkNumber(getSoLuongTF())) {

            if (Integer.valueOf(getSoLuongTF()) > book.getSoLuong()) {
                notifyMax(book.getSoLuong());
            } else {

                ProductSell pro = new ProductSell();
                pro.setMaSanPham(book.getMaSanPham());
                pro.setTenSanPham(book.getTenSanPham());
                pro.setGiaBan(book.getGiaBan());
                pro.setType(Book.TYPE_BOOK);
                pro.setSoLuong(book.getSoLuong());
                pro.setSoLuongBan(Integer.valueOf(soLuongTF.getText()));
                //
                tableModel.setColumnIdentifiers(colsName);
                jTable1.setModel(tableModel);
                String[] rows = dataRow(pro);
                tableModel.addRow(rows);
                empSell.themSP(bill, pro);
                //
                maSanPhamTF.setText("");
                soLuongTF.setText("");
                //
                notifyThemThanhCong();
            }
        } else if (movie.getMaSanPham() != null && checkNumber(getSoLuongTF())) {

            if (Integer.valueOf(getSoLuongTF()) > movie.getSoLuong()) {
                notifyMax(movie.getSoLuong());
            } else {
                //
                ProductSell pro = new ProductSell();
                pro.setMaSanPham(movie.getMaSanPham());
                pro.setTenSanPham(movie.getTenSanPham());
                pro.setGiaBan(movie.getGiaBan());
                pro.setType(Movie.TYPE_MOVIE);
                pro.setSoLuong(movie.getSoLuong());
                pro.setSoLuongBan(Integer.valueOf(soLuongTF.getText()));
                //
                tableModel.setColumnIdentifiers(colsName);
                jTable1.setModel(tableModel);
                String[] rows = dataRow(pro);
                tableModel.addRow(rows);
                empSell.themSP(bill, pro);
                //
                maSanPhamTF.setText("");
                soLuongTF.setText("");
                //
                notifyThemThanhCong();
            }
        } else if (music.getMaSanPham() != null && checkNumber(getSoLuongTF())) {

            if (Integer.valueOf(getSoLuongTF()) > music.getSoLuong()) {
                notifyMax(music.getSoLuong());
            } else {
                //
                ProductSell pro = new ProductSell();
                pro.setMaSanPham(music.getMaSanPham());
                pro.setTenSanPham(music.getTenSanPham());
                pro.setGiaBan(music.getGiaBan());
                pro.setType(Music.TYPE_MUSIC);
                pro.setSoLuongBan(Integer.valueOf(soLuongTF.getText()));
                pro.setSoLuong(music.getSoLuong());
                //
                tableModel.setColumnIdentifiers(colsName);
                jTable1.setModel(tableModel);
                String[] rows = dataRow(pro);
                tableModel.addRow(rows);
                empSell.themSP(bill, pro);
                //
                maSanPhamTF.setText("");
                soLuongTF.setText("");
                //
                notifyThemThanhCong();
            }
        } else {
            notifyWrongInput();
        }
        //Tinh tong tien
        double tongTien = empSell.tongTien(bill);
        tongTienTF.setText(String.valueOf(tongTien));
    }//GEN-LAST:event_themBtActionPerformed

    private void logoutBtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutBtActionPerformed
        // TODO add your handling code here:
        new LoginView();
        con.closeConnectDB();
        this.dispose();
    }//GEN-LAST:event_logoutBtActionPerformed

    private void xoaBtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xoaBtActionPerformed
        // TODO add your handling code here:       
        int indexTable = jTable1.getSelectedRow();
        if (!(indexTable == -1)) {
            empSell.xoaSP(bill, indexTable);
            tableModel.removeRow(indexTable);
            //
            tongTienTF.setText(String.valueOf(empSell.tongTien(bill)));
            notifyXoaThanhCong();
        } else {
            notifyChoseRow();
        }
    }//GEN-LAST:event_xoaBtActionPerformed

    private void inHDBtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inHDBtActionPerformed

        if (!bill.isEmpty()) {

            for (ProductSell product : bill) {

                if (product.getType() == Book.TYPE_BOOK) {
                    con.update("update Book set SoLuong="
                            + (product.getSoLuong() - product.getSoLuongBan())
                            + " where MaSanPham='" + product.getMaSanPham() + "'");
                } else if (product.getType() == Music.TYPE_MUSIC) {
                    con.update("update Music set SoLuong="
                            + (product.getSoLuong() - product.getSoLuongBan())
                            + " where MaSanPham='" + product.getMaSanPham() + "'");
                } else if (product.getType() == Movie.TYPE_MOVIE) {
                    con.update("update Movie set SoLuong="
                            + (product.getSoLuong() - product.getSoLuongBan())
                            + " where MaSanPham='" + product.getMaSanPham() + "'");
                } else {
                    System.out.println("Error");
                }

                try {
                    //
                    ActionLog actionLog = new ActionLog();
                    actionLog.setCreatedDate(new Date());
                    actionLog.setMsp(product.getMaSanPham());
                    actionLog.setUsername(getUsername());
                    actionLog.setActionType(ActionLog.TYPE_SELL);
                    actionLog.setProductType(product.getType());
                    actionLog.setSoLuong(product.getSoLuongBan());
                    //
                    String sql = "insert into action_log(usename,so_luong,product_type,ma_sp,creat_date,action_type) "
                            + " values('" + actionLog.getUsername()
                            + "'," + actionLog.getSoLuong()
                            + "," + actionLog.getProductType()
                            + ",'" + actionLog.getMsp()
                            + "',now()"
                            + "," + actionLog.getActionType() + ")";
                    con.insert(sql);
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
            //In PDF
            JFileChooser chooser = new JFileChooser();
            int i = chooser.showSaveDialog(this);
            if (i == JFileChooser.APPROVE_OPTION) {
                empSell.inHoaDon(jTable1, chooser, String.valueOf(empSell.tongTien(bill)), getName());
            }
        } else {
            notifyPrintBill();
        }
        //
        bill.removeAll(bill);
        int rowSize = tableModel.getRowCount();
        for (int j = 0; j < rowSize; j++) {
            tableModel.removeRow(0);
        }
        tongTienTF.setText(String.valueOf(empSell.tongTien(bill)));
    }//GEN-LAST:event_inHDBtActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SellProductsView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SellProductsView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SellProductsView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SellProductsView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SellProductsView().setVisible(true);
            }
        });
    }
    DefaultTableModel tableModel = new DefaultTableModel();

    String[] colsName = {"Mã SP", "Tên SP", "Giá", "SL", "Thành tiền"};

    EmployeeSell empSell = new EmployeeSell();

    List<ProductSell> bill = new ArrayList<ProductSell>();

    TimeSystem time = new TimeSystem();

    CreateConnectionDB con = new CreateConnectionDB();
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton inHDBt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton logoutBt;
    private javax.swing.JTextField maSanPhamTF;
    private javax.swing.JTextField soLuongTF;
    private javax.swing.JButton themBt;
    private javax.swing.JLabel timeL;
    private javax.swing.JLabel tongTienTF;
    private javax.swing.JButton xoaBt;
    // End of variables declaration//GEN-END:variables
}
